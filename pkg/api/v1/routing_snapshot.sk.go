// Code generated by solo-kit. DO NOT EDIT.

package v1

import (
	istio_networking_v1alpha3 "github.com/solo-io/sg/pkg/api/external/istio/networking/v1alpha3"

	"github.com/solo-io/solo-kit/pkg/utils/hashutils"
	"go.uber.org/zap"
)

type RoutingSnapshot struct {
	Destinationrules DestinationrulesByNamespace
	Destinationrules istio_networking_v1alpha3.DestinationrulesByNamespace
	Virtualservices  istio_networking_v1alpha3.VirtualservicesByNamespace
}

func (s RoutingSnapshot) Clone() RoutingSnapshot {
	return RoutingSnapshot{
		Destinationrules: s.Destinationrules.Clone(),
		Destinationrules: s.Destinationrules.Clone(),
		Virtualservices:  s.Virtualservices.Clone(),
	}
}

func (s RoutingSnapshot) Hash() uint64 {
	return hashutils.HashAll(
		s.hashDestinationrules(),
		s.hashDestinationrules(),
		s.hashVirtualservices(),
	)
}

func (s RoutingSnapshot) hashDestinationrules() uint64 {
	return hashutils.HashAll(s.Destinationrules.List().AsInterfaces()...)
}

func (s RoutingSnapshot) hashDestinationrules() uint64 {
	return hashutils.HashAll(s.Destinationrules.List().AsInterfaces()...)
}

func (s RoutingSnapshot) hashVirtualservices() uint64 {
	return hashutils.HashAll(s.Virtualservices.List().AsInterfaces()...)
}

func (s RoutingSnapshot) HashFields() []zap.Field {
	var fields []zap.Field
	fields = append(fields, zap.Uint64("destinationrules", s.hashDestinationrules()))
	fields = append(fields, zap.Uint64("destinationrules", s.hashDestinationrules()))
	fields = append(fields, zap.Uint64("virtualservices", s.hashVirtualservices()))

	return append(fields, zap.Uint64("snapshotHash", s.Hash()))
}
